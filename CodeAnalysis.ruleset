<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="MSP430 Emulator Code Analysis Rules" Description="Enhanced static analysis rules for MSP430 Emulator project focusing on CodeQL issues" ToolsVersion="16.0">
  <IncludeAll Action="Info" />
  
  <!-- CodeQL-inspired rules for the specific issues mentioned in the comment -->
  
  <!-- Consolidated rules for Microsoft.CodeAnalysis.CSharp analyzer -->
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp" RuleNamespace="Microsoft.CodeAnalysis.CSharp">
    <!-- Useless assignment detection -->
    <Rule Id="CS0219" Action="Warning" /> <!-- Variable is assigned but never used -->
    <Rule Id="CS0168" Action="Warning" /> <!-- Variable is declared but never used -->
    
    <!-- Issue #1: Generic catch clauses -->
    <Rule Id="CA1031" Action="Warning" /> <!-- Do not catch general exception types -->
    
    <!-- Issue #2: Path operations - note that there's no specific analyzer rule for Path.Combine vs Path.Join -->
    <!-- This would need to be caught through custom code review or additional tooling -->
    
    <!-- Issue #3: IDisposable patterns -->
    <Rule Id="CA2000" Action="Warning" /> <!-- Dispose objects before losing scope -->
    <Rule Id="CA1063" Action="Info" />    <!-- Implement IDisposable correctly -->
    <Rule Id="CA2213" Action="Info" />    <!-- Disposable fields should be disposed -->
    
    <!-- Dynamic keyword usage prevention -->
    <!-- Note: There's no built-in .NET analyzer rule for 'dynamic' keyword -->
    <!-- This should be caught through code review and manual enforcement -->
    <!-- Consider adding StyleCop.Analyzers package for additional rules -->
    
    <!-- Keep other important security and reliability rules as info -->
    <Rule Id="CA5394" Action="Info" />    <!-- Do not use insecure randomness -->
    <Rule Id="CA5359" Action="Info" />    <!-- Do not disable certificate validation -->
    <Rule Id="CA2227" Action="Info" />    <!-- Collection properties should be read only -->
    
    <!-- Disable noisy rules that aren't related to the CodeQL issues -->
    <Rule Id="CA1805" Action="None" />    <!-- Member is explicitly initialized to its default value -->
    <Rule Id="CA1024" Action="None" />    <!-- Use properties where appropriate -->
    <Rule Id="CA1822" Action="None" />    <!-- Member can be marked as static -->
    <Rule Id="CA1311" Action="None" />    <!-- Specify a culture -->
    <Rule Id="CA1869" Action="None" />    <!-- Cache JsonSerializerOptions -->
    <Rule Id="CA1304" Action="None" />    <!-- String operations culture -->
    <Rule Id="CA1716" Action="None" />    <!-- Reserved keyword conflicts -->
    <Rule Id="CA1845" Action="None" />    <!-- Use span-based operations -->
    <Rule Id="CA1707" Action="None" />    <!-- Remove underscores from names (common in test method names) -->
    <Rule Id="CA1816" Action="None" />    <!-- GC.SuppressFinalize for tests -->
    <Rule Id="CA1852" Action="None" />    <!-- Type can be sealed -->
  </Rules>
  
  <!-- SonarAnalyzer.CSharp rules for additional code quality checks -->
  <Rules AnalyzerId="SonarAnalyzer.CSharp" RuleNamespace="SonarAnalyzer.CSharp">
    <!-- Useless assignment and dead code detection - MAIN GOAL -->
    <Rule Id="S1854" Action="Warning" /> <!-- Useless assignments should be removed -->
    <Rule Id="S1481" Action="Warning" /> <!-- Unused local variables should be removed -->
    <Rule Id="S1172" Action="Info" />    <!-- Unused method parameters should be removed -->
    <Rule Id="S1144" Action="Info" />    <!-- Unused private types or members should be removed -->
    
    <!-- Disable rules that cause noise and are not related to useless assignments -->
    <Rule Id="S2325" Action="None" />    <!-- Make methods static when possible -->
    <Rule Id="S2589" Action="None" />    <!-- Boolean conditions should not always evaluate to same result -->
    <Rule Id="S1450" Action="None" />    <!-- Private fields should be removed if not used -->
    <Rule Id="S2292" Action="None" />    <!-- Auto-implemented property suggestions -->
    <Rule Id="S101" Action="None" />     <!-- Naming convention suggestions -->
    <Rule Id="S2971" Action="None" />    <!-- LINQ optimization suggestions -->
    <Rule Id="S3928" Action="None" />    <!-- Parameter name suggestions -->
    <Rule Id="S4144" Action="None" />    <!-- Methods should not have identical implementations -->
    <Rule Id="S3881" Action="None" />    <!-- IDisposable implementation suggestions -->
    <Rule Id="S3966" Action="None" />    <!-- Resource disposal suggestions -->
    <Rule Id="S6966" Action="None" />    <!-- Async method suggestions -->
    <Rule Id="S1751" Action="None" />    <!-- Loop refactoring suggestions -->
    
    <!-- Other important code quality rules -->
    <Rule Id="S3898" Action="Info" />    <!-- Value types should not implement "ICloneable" -->
    <Rule Id="S2372" Action="Warning" /> <!-- Exceptions should not be thrown from property getters -->
    <Rule Id="S1066" Action="Info" />    <!-- Mergeable "if" statements should be combined -->
  </Rules>
</RuleSet>