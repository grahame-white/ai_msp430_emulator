@startuml register_file_layout
!theme plain
title MSP430 CPU Register File Organization

scale 800 width

rectangle "MSP430 Register File\n16 x 16-bit Registers" as REGFILE {
    
    rectangle "R0 (PC)\nProgram Counter" as R0 #lightcoral
    note right of R0 : Special: Word-aligned\nPoints to next instruction
    
    rectangle "R1 (SP)\nStack Pointer" as R1 #lightblue
    note right of R1 : Special: Word-aligned\nPoints to stack top
    
    rectangle "R2 (SR)\nStatus Register" as R2 #lightgreen
    note right of R2 : Special: CPU flags\nC,Z,N,GIE,CPUOff,etc.
    
    rectangle "R3 (CG1)\nConstant Generator #1" as R3 #lightyellow
    note right of R3 : Special: Generates constants\n0, +1, +2, +4, +8, -1
    
    rectangle "R4\nGeneral Purpose" as R4 #lightgray
    rectangle "R5\nGeneral Purpose" as R5 #lightgray
    rectangle "R6\nGeneral Purpose" as R6 #lightgray
    rectangle "R7\nGeneral Purpose" as R7 #lightgray
    rectangle "R8\nGeneral Purpose" as R8 #lightgray
    rectangle "R9\nGeneral Purpose" as R9 #lightgray
    rectangle "R10\nGeneral Purpose" as R10 #lightgray
    rectangle "R11\nGeneral Purpose" as R11 #lightgray
    rectangle "R12\nGeneral Purpose" as R12 #lightgray
    rectangle "R13\nGeneral Purpose" as R13 #lightgray
    rectangle "R14\nGeneral Purpose" as R14 #lightgray
    rectangle "R15\nGeneral Purpose" as R15 #lightgray
}

' Register bit organization
rectangle "Register Structure" as REGSTRUCT {
    rectangle "Bit 15" as B15
    rectangle "Bit 14" as B14
    rectangle "..." as BDOTS
    rectangle "Bit 1" as B1
    rectangle "Bit 0" as B0
    
    B15 -right-> B14
    B14 -right-> BDOTS
    BDOTS -right-> B1
    B1 -right-> B0
}

note bottom of REGSTRUCT : Each register is 16 bits wide\nSupports both 8-bit and 16-bit access

' Access modes
rectangle "Register Access Modes" as ACCESS {
    rectangle "16-bit Access\nRead/Write full register" as ACCESS16 #lightsteelblue
    rectangle "8-bit Low Byte Access\nBits 0-7" as ACCESS8L #lightsalmon
    rectangle "8-bit High Byte Access\nBits 8-15" as ACCESS8H #lightsalmon
}

' Color legend
legend bottom
    |Color |Register Type |Special Behavior |
    |<#lightcoral>| Program Counter | Word-aligned addressing |
    |<#lightblue>| Stack Pointer | Word-aligned, stack operations |
    |<#lightgreen>| Status Register | Individual flag management |
    |<#lightyellow>| Constant Generator | Hardware constant generation |
    |<#lightgray>| General Purpose | Standard read/write operations |
endlegend

' Relationships
R0 -down-> ACCESS
R1 -down-> ACCESS
R2 -down-> ACCESS
R3 -down-> ACCESS

note top of REGFILE : CPU Register File: 16 x 16-bit registers\nTotal: 256 bits of register storage

@enduml