#!/usr/bin/env bash
# script/check-format-all
# Check code formatting across the entire repository
#
# Tools used:
# - dotnet format: C# formatting verification
# - prettier: JavaScript, JSON, YAML, and Markdown formatting check
# - eslint: JavaScript code linting and formatting check
# - yamllint: YAML file linting (via npm scripts)
# - actionlint: GitHub Actions workflow linting (via npm scripts)

set -e

cd "$(dirname "$0")/.."

echo "==> Checking MSP430 Emulator code formatting..."

FORMAT_ISSUES=0

# Check C# code formatting
echo "==> Checking C# code formatting..."
if ! dotnet format --verify-no-changes --verbosity diagnostic; then
    echo "❌ C# formatting issues detected!"
    echo "   Run './script/format' to fix C# formatting"
    FORMAT_ISSUES=1
else
    echo "✅ C# code formatting is correct"
fi

# Check JavaScript, JSON, YAML, and Markdown formatting
echo "==> Checking Prettier formatting..."
cd .github/scripts

# Ensure dependencies are installed
if [ ! -d "node_modules" ]; then
    echo "==> Installing formatting dependencies..."
    npm install > /dev/null 2>&1
fi

# Check Prettier formatting
if ! npm run format:check; then
    echo "❌ Prettier formatting issues detected!"
    echo "   Run 'cd .github/scripts && npm run format' to fix formatting"
    FORMAT_ISSUES=1
else
    echo "✅ Prettier formatting is correct"
fi

# Check ESLint
echo "==> Checking ESLint..."
if ! npm run lint; then
    echo "❌ ESLint issues detected!"
    echo "   Run 'cd .github/scripts && npm run lint:fix' to auto-fix or fix manually"
    FORMAT_ISSUES=1
else
    echo "✅ ESLint checks passed"
fi

cd - > /dev/null

if [ $FORMAT_ISSUES -eq 0 ]; then
    echo "==> All formatting checks passed successfully!"
    exit 0
else
    echo "==> Formatting issues detected. Please fix them before committing."
    exit 1
fi